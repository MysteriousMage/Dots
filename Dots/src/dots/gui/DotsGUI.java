/*
 * Copyright (C) 2015 Timothy Chandler
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package dots.gui;

import dots.util.Driver;
import javax.swing.GroupLayout;
import javax.swing.JPanel;

/**
 *
 * @author Timothy Chandler
 */
public class DotsGUI extends javax.swing.JFrame {
    
    private Game game;
    private NewGame newGame;
    private WelcomeScreen welcome;
    private JPanel currentPanel;
    /**
     * Creates new form DotsGUI
     */
    public DotsGUI() {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DotsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DotsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DotsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DotsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        initComponents();
        this.setTitle("Dots");
        startUp();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        gameMenu = new javax.swing.JMenu();
        newGameOption = new javax.swing.JMenuItem();
        saveGameOption = new javax.swing.JMenuItem();
        loadGameOption = new javax.swing.JMenuItem();
        quitOption = new javax.swing.JMenuItem();
        optionsMenu = new javax.swing.JMenu();
        helpOption = new javax.swing.JMenuItem();
        appearanceOption = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        gameMenu.setText("Game");

        newGameOption.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F2, 0));
        newGameOption.setText("New Game");
        gameMenu.add(newGameOption);

        saveGameOption.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        saveGameOption.setText("Save Game");
        gameMenu.add(saveGameOption);

        loadGameOption.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F9, 0));
        loadGameOption.setText("Load Game");
        gameMenu.add(loadGameOption);

        quitOption.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        quitOption.setText("Quit");
        gameMenu.add(quitOption);

        jMenuBar1.add(gameMenu);

        optionsMenu.setText("Options");

        helpOption.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        helpOption.setText("Help");
        optionsMenu.add(helpOption);

        appearanceOption.setText("Appearance");
        optionsMenu.add(appearanceOption);

        jMenuBar1.add(optionsMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 319, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem appearanceOption;
    private javax.swing.JMenu gameMenu;
    private javax.swing.JMenuItem helpOption;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem loadGameOption;
    private javax.swing.JMenuItem newGameOption;
    private javax.swing.JMenu optionsMenu;
    private javax.swing.JMenuItem quitOption;
    private javax.swing.JMenuItem saveGameOption;
    // End of variables declaration//GEN-END:variables

    private void startUp() {
        newGame = new NewGame();
        welcome = new WelcomeScreen();
        setPanel("welcome");
    }
    
    public void setPanel(String panel){
        try{
            this.getContentPane().remove(currentPanel);
        }catch(NullPointerException e){
        }
        GroupLayout layout = new GroupLayout(this.getContentPane());
        switch(panel.toLowerCase()){
            case "game":
                game = new Game(Driver.grid);
                layout.setHorizontalGroup(
                    layout.createParallelGroup(GroupLayout.Alignment.LEADING).addComponent(game)
                );
                layout.setVerticalGroup(
                    layout.createParallelGroup(GroupLayout.Alignment.LEADING).addComponent(game)
                );
                this.setLayout(layout);
                currentPanel=newGame;
                break;
            case "newgame":
                layout.setHorizontalGroup(
                    layout.createParallelGroup(GroupLayout.Alignment.LEADING).addComponent(newGame)
                );
                layout.setVerticalGroup(
                    layout.createParallelGroup(GroupLayout.Alignment.LEADING).addComponent(newGame)
                );
                this.setLayout(layout);
                currentPanel=newGame;
                break;
            case "welcome":
                layout.setHorizontalGroup(
                    layout.createParallelGroup(GroupLayout.Alignment.LEADING).addComponent(welcome)
                );
                layout.setVerticalGroup(
                    layout.createParallelGroup(GroupLayout.Alignment.LEADING).addComponent(welcome)
                );
                this.setLayout(layout);
                currentPanel=welcome;
                break;
        }
    }
    
    public void repaintGame(){
        game.repaint();
    }
}
